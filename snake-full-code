import random
import pygame
pygame.init()

#  Colors 
white = (255,255,255)
red = (255,0,0)
black = (0,0,0)
blue = (0,0,255)
purple = (153, 0, 204)
green = (0, 204, 102)
pink = (255, 51, 204)
yellow = (255, 255, 0)

'''What can be done? 
background song
sound accordingly
pause button
hiscore
score at game over screen
welcome screen
snake color attractive
background 
apple
snake
mobile computing
share
notes according to the scores like candy crush
play store 
ads
other selling options
left-right , top-bottom
'''

# Game - Window
screen_width = 1540
screen_height = 800
gameWindow = pygame.display.set_mode((screen_width,screen_height))
pygame.display.set_caption('Snake Game BY Parth Parmar')
pygame.display.update()

# basic

clock = pygame.time.Clock()
font = pygame.font.SysFont(None,35)
fps = 70 # frames per second

# Score display and snake sizing functions

def screen_score(text,color,x,y):
    screen_text = font.render(text,True,color)
    gameWindow.blit(screen_text,[x,y])
def screen_level(text,color,x,y):
    screen_text = font.render(text,True,color)
    gameWindow.blit(screen_text,[x,y])
          
def plot_snake(gameWindow, color, snk_list, snake_size):
    for x,y in snk_list:
        # pygame.draw.rect(gameWindow, color, [x, y-20, snake_size, snake_size])
        pygame.draw.rect(gameWindow, color, [x, y, snake_size, snake_size])
        # pygame.draw.rect(gameWindow, color, [x, y+20, snake_size, snake_size])

# Main logic 

def gameloop():
    
    # Initializing
    
    exit_game = False
    game_over = False
    snake_x = 50
    snake_y = 60
    velocity_x = 0
    velocity_y = 0
    food_x = random.randint(100,screen_width/2)
    food_y = random.randint(100,screen_height/2)
    score = 0
    snake_size = 16
    snk_list = []
    snk_length = 1

    # with open("hiscore.txt", "r") as f:
    #     hiscore = f.read()
    
    while not exit_game:
        
        if game_over: 
            
            # with open("hiscore.txt", "w") as f:
            #     f.write(str(hiscore))
                
            gameWindow.fill(black)
            screen_score('Game Over - Press enter to play again',white,20,30)
            
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    exit_game = True
                    
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_RETURN:
                        gameloop()
        else:
            # Arrow keys logic 
            
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    exit_game = True
                    
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_RIGHT:
                        velocity_x = 2.8
                        velocity_y = 0
                    
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_LEFT:
                        velocity_x = -2.8
                        velocity_y = 0
                        
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_UP:
                        velocity_y =-2.8
                        velocity_x = 0
                        
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_DOWN:
                        velocity_y = 2.8
                        velocity_x = 0
                
            # Random food coordinates and food eating logic
                        
            if abs(snake_x - food_x)< 12 and abs(snake_y - food_y)<12:
                score+=10
                food_x = random.randint(40,700)
                food_y = random.randint(40,300)
                snk_length +=15
                # if score> int(hiscore):
                #     hiscore = score
                
            pygame.display.update()
                        
            snake_x += velocity_x
            snake_y += velocity_y
                
            gameWindow.fill(black)
            screen_score('Score: '+ (str(score)),white,10,10)
            pygame.draw.rect(gameWindow,red,[food_x,food_y,snake_size,snake_size])
            
            # Snake length logic
            
            head = [snake_x,snake_y]
            snk_list.append(head)

            if len(snk_list)>snk_length:
                del snk_list[0]
                
            if head in snk_list[:-2]:
                game_over = True
                
            # Gameover logic
                
            if snake_x <0 or snake_x > screen_width or snake_y < 0 or snake_y > screen_height:
                game_over = True
                
            # snake level change
            if score < 120:
                plot_snake(gameWindow, blue, snk_list, snake_size)
                screen_score('Level:1',blue,140,10)
            elif score < 200:
                plot_snake(gameWindow, green, snk_list, snake_size)
                screen_score('Level:2',green,140,10)
            elif score < 350:
                plot_snake(gameWindow, purple, snk_list, snake_size)
                screen_score('Level:3',purple,140,10)
            elif score < 500:
                plot_snake(gameWindow, pink, snk_list, snake_size)
                screen_score('Level:4',pink,140,10)
            elif score < 600:
                plot_snake(gameWindow, yellow, snk_list, snake_size)
                screen_score('Level:5',yellow,140,10)
            else :
                plot_snake(gameWindow, white, snk_list, snake_size)
                screen_score('Level:Final',white,140,10)
        pygame.display.update()
        clock.tick(fps) #frames per clock
            
    pygame.quit()
    quit()
        
gameloop()
